{
  "compilerOptions": {
    // Устанавливает базовую директорию для разрешения модулей.
    "baseUrl": ".",

    // Определяет пути для разрешения импортов. В данном случае все импорты из src будут разрешаться относительно папки src.
    "paths": {
      "*": ["./src/*"],
      "shared/*": ["src/shared/*"]
    },

    // Указывает директорию для вывода скомпилированных файлов.
    "outDir": "./dist/",

    // Запрещает использование типа "any" без явного указания, что улучшает строгость типизации.
    "noImplicitAny": true,

    // Указывает систему модулей, которую следует использовать при компиляции.
    "module": "ESNext",

    // Указывает версию JavaScript, к которой TypeScript должен компилировать код. В данном случае es5.
    "target": "es5",

    // Указывает, что JSX должен компилироваться с использованием синтаксиса react-jsx (для React 17 и выше).
    "jsx": "react-jsx",

    // Разрешает использование файлов JavaScript в проекте TypeScript.
    "allowJs": true,

    // Указывает, как разрешать модули. В данном случае используется разрешение через Node.
    "moduleResolution": "node",

    // Включает изоляцию модулей, но в данном случае она отключена.
    "isolatedModules": false,

    // Разрешает использование синтаксиса импорта по умолчанию для CommonJS-экспортируемых модулей.
    "esModuleInterop": true,

    // Включает строгую типизацию по всему проекту, включая проверки для типов, которые могут быть некорректными.
    "strict": true,

    // Разрешает импорт модулей, у которых нет дефолтного экспорта, но которые работают с `import ... from` синтаксисом.
    "allowSyntheticDefaultImports": true
  },

  // Указывает TypeScript, какие файлы и папки следует включить в компиляцию.
  "include": [
    "src/**/*.ts", // Включаем все .ts файлы в папке src
    "src/**/*.tsx", // Включаем все .tsx файлы в папке src (React компоненты)
    "declaration.d.ts", // Включаем файл с глобальными типами
    "webpack.config.ts" // Включаем конфигурацию Webpack для TypeScript
  ],

  // Устанавливает настройки для ts-node, если проект использует его для выполнения TypeScript напрямую.
  "ts-node": {
    // Устанавливает тип модуля для ts-node (необходим для правильного импорта в некоторых случаях).
    "compilerOptions": {
      "module": "CommonJS"
    }
  },

  // Указывает, какие файлы и папки следует исключить из компиляции.
  "exclude": [
    "node_modules", // Исключаем папку node_modules
    "declaration.d.ts", // Исключаем файл с глобальными типами (если он не нужен для компиляции)
    "webpack.config.ts" // Исключаем конфигурацию Webpack, если она не должна компилироваться
  ]
}
